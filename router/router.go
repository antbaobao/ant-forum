package router

import (
	"ant-forum/handler/sd"
	"ant-forum/handler/v1/articles"
	"ant-forum/handler/v1/categories"
	"ant-forum/handler/v1/tags"
	"ant-forum/handler/v1/user"
	"ant-forum/handler/v1/casbin"
	"ant-forum/router/middleware"

	_ "ant-forum/docs" // docs is generated by Swag CLI, you have to import it.

	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
	"ant-forum/util"
)

// Load loads the middlewares, routes, handlers.
func Load(g *gin.Engine, mw ...gin.HandlerFunc) *gin.Engine {
	e := util.Casbin() // 初始化的Casbin

	// Middlewares.
	g.Use(gin.Recovery())
	g.Use(middleware.NoCache)
	g.Use(middleware.Options)
	g.Use(middleware.Secure)
	g.Use(mw...)
	// 404 Handler.
	g.NoRoute(func(c *gin.Context) {
		c.String(http.StatusNotFound, "The incorrect API route.")
	})
	// swagger api 文档
	g.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	// 登录
	g.POST("/v1/login", user.Login)

	i :=g.GET("/v1/auth/info", user.GetUserInfo)
	i.Use(middleware.AuthMiddleware())
	i.Use(middleware.CasbinMiddleware(e))

	// 用户相关
	u := g.Group("/v1/user")
	u.Use(middleware.AuthMiddleware())
	u.Use(middleware.CasbinMiddleware(e))
	{
		// 登录鉴权后获取用户信息

		u.POST("", user.Create)
		u.DELETE("/:id", user.Delete)
		u.PUT("/:id", user.Update)
		u.GET("", user.List)
		u.GET("/:id", user.GetUserById)
	}
	// 标签相关
	t := g.Group("/v1/tags")
	// t.Use(middleware.AuthMiddleware())
	{
		t.POST("", tags.Create)
		t.GET("", tags.List)
		t.DELETE("/:id", tags.Delete)
		t.GET("/:id", tags.GetTagById)
	}
	// 分类相关
	c := g.Group("/v1/categories")
	// c.Use(middleware.AuthMiddleware())
	{
		c.POST("", categories.Create)
		c.GET("", categories.List)
		c.DELETE("/:id", categories.Delete)
		c.GET("/:id", categories.GetCategoryById)
	}
	// 文章相关
	a := g.Group("/v1/articles")
	// a.Use(middleware.AuthMiddleware())
	{
		a.POST("", articles.Create)
		a.GET("", articles.List)
		a.DELETE("/:id", articles.Delete)
		a.GET("/:id", articles.GetArticleById)
	}
	// Casbin策略
	cs:= g.Group("/v1/casbin")
	//cs.Use(middleware.AuthMiddleware())
	//cs.Use(middleware.CasbinMiddleware(e))
	{
		// 登录鉴权后获取用户信息
		cs.POST("", casbin.Create)
		//casbin.DELETE("/:id", user.Delete)
		//casbin.PUT("/:id", user.Update)
		cs.GET("", casbin.List)
		//casbin.GET("/:id", user.GetUserById)
	}
	// 健康检查
	svcd := g.Group("/sd")
	{
		svcd.GET("/health", sd.HealthCheck)
		svcd.GET("/disk", sd.DiskCheck)
		svcd.GET("/cpu", sd.CPUCheck)
		svcd.GET("/ram", sd.RAMCheck)
	}
	return g
}
